openapi: 3.0.0
info:
  title: Ametros API
  description: API for managing AI creating assignments in the Ametros
  version: 1.0.0
servers:
  - url: http://localhost:5000/api
paths:
  /auth/signup:
    post:
      operationId: signup
      summary: Sign up a new user
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignupRequest"
      responses:
        "200":
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
        "400":
          description: Bad request (missing fields, user exists, or registration failed)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "All Fields Are Required"

  /auth/login:
    post:
      operationId: login
      summary: Login user
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
      responses:
        "200":
          description: Login successful
          headers:
            Set-Cookie:
              schema:
                type: string
                description: Authentication token cookie
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: number
        "400":
          description: Bad request (missing fields)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "All Fields Are Required"
        "401":
          description: Unauthorized (incorrect password)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Incorrect password"
        "404":
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "User with given email not found!"

components:
  securitySchemes:
    webAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    SignupRequest:
      type: object
      required:
        - firstName
        - lastName
        - email
        - password
      properties:
        firstName:
          type: string
          example: "John"
        lastName:
          type: string
          example: "Doe"
        email:
          type: string
          format: email
          example: "john.doe@example.com"
        password:
          type: string
          format: password
          example: "securePassword123!"
        registrationCode:
          type: number
          nullable: true
          example: 8888
        role:
          type: string
          enum: ["USER", "ADMIN"]
          default: "USER"
        acceptedTermsAndConditions:
          type: boolean
          example: true

    LoginRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
          example: "john.doe@example.com"
        password:
          type: string
          format: password
          example: "securePassword123!"
