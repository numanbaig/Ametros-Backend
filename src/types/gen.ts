/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/auth/signup": {
        parameters: {
            query?: any;
            header?: any;
            path?: any;
            cookie?: any;
        };
        get?: any;
        put?: any;
        /** Sign up a new user */
        post: operations["signup"];
        delete?: any;
        options?: any;
        head?: any;
        patch?: any;
        trace?: any;
    };
    "/auth/login": {
        parameters: {
            query?: any;
            header?: any;
            path?: any;
            cookie?: any;
        };
        get?: any;
        put?: any;
        /** Login user */
        post: operations["login"];
        delete?: any;
        options?: any;
        head?: any;
        patch?: any;
        trace?: any;
    };
}
export type webhooks = Record<string, any>;
export interface components {
    schemas: {
        SignupRequest: {
            /** @example John */
            firstName: string;
            /** @example Doe */
            lastName: string;
            /**
             * Format: email
             * @example john.doe@example.com
             */
            email: string;
            /**
             * Format: password
             * @example securePassword123!
             */
            password: string;
            /** @example 8888 */
            registrationCode?: number | null;
            /**
             * @default USER
             * @enum {string}
             */
            role: "USER" | "ADMIN";
            /** @example true */
            acceptedTermsAndConditions?: boolean;
        };
        LoginRequest: {
            /**
             * Format: email
             * @example john.doe@example.com
             */
            email: string;
            /**
             * Format: password
             * @example securePassword123!
             */
            password: string;
        };
    };
    responses: any;
    parameters: any;
    requestBodies: any;
    headers: any;
    pathItems: any;
}
export type $defs = Record<string, any>;
export interface operations {
    signup: {
        parameters: {
            query?: any;
            header?: any;
            path?: any;
            cookie?: any;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["SignupRequest"];
            };
        };
        responses: {
            /** @description User created successfully */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        success?: boolean;
                    };
                };
            };
            /** @description Bad request (missing fields, user exists, or registration failed) */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example All Fields Are Required */
                        error?: string;
                    };
                };
            };
        };
    };
    login: {
        parameters: {
            query?: any;
            header?: any;
            path?: any;
            cookie?: any;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["LoginRequest"];
            };
        };
        responses: {
            /** @description Login successful */
            200: {
                headers: {
                    "Set-Cookie"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        success?: boolean;
                        status?: number;
                    };
                };
            };
            /** @description Bad request (missing fields) */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example All Fields Are Required */
                        error?: string;
                    };
                };
            };
            /** @description Unauthorized (incorrect password) */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example Incorrect password */
                        error?: string;
                    };
                };
            };
            /** @description User not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example User with given email not found! */
                        error?: string;
                    };
                };
            };
        };
    };
}
